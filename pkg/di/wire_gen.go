// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/anrisys/quicket/internal/user"
	"github.com/anrisys/quicket/pkg/config"
	"github.com/anrisys/quicket/pkg/config/logger"
	"github.com/anrisys/quicket/pkg/database"
	"github.com/anrisys/quicket/pkg/security"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	appConfig, err := config.Load()
	if err != nil {
		return nil, err
	}
	db, err := database.MySQLDB(appConfig)
	if err != nil {
		return nil, err
	}
	zerologLogger := logger.NewZerolog(appConfig)
	userRepository := user.NewUserRepository(db, zerologLogger)
	accountSecurity := security.NewAccountSecurity(appConfig)
	userService := user.NewUserService(userRepository, zerologLogger, accountSecurity)
	userHandler := user.NewUserHandler(userService, zerologLogger)
	app := &App{
		Config:      appConfig,
		UserHandler: userHandler,
	}
	return app, nil
}

// wire.go:

type App struct {
	Config      *config.AppConfig
	UserHandler *user.UserHandler
}
